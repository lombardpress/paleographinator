{"version":3,"sources":["logo.svg","Utils.js","Image.js","Text.js","Label.js","ImageTextWrapper.js","Surface.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","packageData","data","itemsPerPage","codex","split","label","resources","constructor","Array","next","prev","total","within","first","last","index","startIndex","page","Math","ceil","totalPages","Image","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchText","imageLink","imageUrl","coords","displayWidth","react_default","a","createElement","src","Component","Text","className","dangerouslySetInnerHTML","__html","text","_this2","surfaceButton","Button_default","onClick","handleShowSurface","surfaceid","Icon_default","ImageTextWrapper","defineProperty","targetLabel","getClass","Label","src_Image","canvas","canvasShort","src_Text","Surface","url","Axios","get","then","_ref","setState","catch","err","console","log","_this3","map","h","i","resource","chars","on","length","src_ImageTextWrapper","key","App","handleChange","bind","assertThisInitialized","handleChangeCodex","handleChangeInstitution","handleSubmit","handleNext","handlePrevious","handleFirst","handleLast","triggerSearch","searchCodex","searchInstitution","institutions","event","inputText","target","value","newData","d","_ref2","prevState","e","preventDefault","parameters","find","c","updateSearch","query","join","params","output","res","results","bindings","institutionShortId","institution","institutionTitle","codexQuery","codices","codexShortId","codexTitle","_this4","AppBar_default","position","color","Toolbar_default","Typography_default","variant","onSubmit","id","InputLabel_default","htmlFor","TextField_default","onChange","placeholder","Select_default","inputProps","MenuItem_default","includeList","includes","getCodexMenuItems","getInstitutionMenuItems","type","wrappers","surfaceId","aria-label","src_Surface","Link_default","href","block","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3cc62e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function packageData(data, itemsPerPage){\n  return {\n      codex: data[\"@id\"].split(\"codex=\")[1], // only works if codex is last paramater\n      label: data[\"label\"],\n      data: data.resources.constructor === Array ? data.resources : [data.resources],\n      next: data.next,\n      prev: data.prev,\n      total: data.within.total,\n      first: data.within.first,\n      last: data.within.last,\n      index: data.startIndex,\n      page: Math.ceil(data.startIndex / itemsPerPage) + 1,\n      totalPages: Math.ceil(data.within.total / itemsPerPage),\n      }\n}\n","import React, { Component } from 'react';\nclass Image extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    const imageLink = this.props.imageUrl + \"/\" + this.props.coords + \"/\" + this.props.displayWidth + \",/0/default.jpg\"\n    return (\n      <img src={imageLink}/>\n    );\n  }\n}\n\nexport default Image;\n","import React, { Component } from 'react';\n\nclass Text extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    return (\n      <div className=\"text\">\n       <span dangerouslySetInnerHTML={{__html: this.props.text}} />\n      </div>\n    );\n  }\n}\n\nexport default Text;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nclass Image extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    return (\n      <p className=\"label\">\n      {this.props.label}\n      {this.props.surfaceButton && <Button onClick={() => {this.props.handleShowSurface(this.props.surfaceid, this.props.label)}}><Icon>pageview</Icon></Button>}\n      </p>\n    );\n  }\n}\n\nexport default Image;\n","import React, { Component } from 'react';\nimport Image from './Image';\nimport Text from './Text';\nimport Label from './Label';\n\nclass ImageTextWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    const getClass = () => {\n      if (this.props.targetLabel === this.props.label){\n        return \"target\"\n      }\n    }\n    return (\n      <div className=\"ImageTextWrapper\" className={getClass()}>\n        <div className=\"labelImageWrapper\">\n        <Label label={this.props.label} handleShowSurface={this.props.handleShowSurface} surfaceid={this.props.surfaceid} surfaceButton={this.props.surfaceButton}/>\n        <Image\n          imageUrl={this.props.imageUrl}\n          canvas={this.props.canvas}\n          coords={this.props.coords}\n          canvasShort={this.props.canvasShort}\n          displayWidth={this.props.displayWidth}\n          />\n        </div>\n        <Text text={this.props.text}/>\n      </div>\n    );\n  }\n}\n\nexport default ImageTextWrapper;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nimport ImageTextWrapper from './ImageTextWrapper';\n\nclass Surface extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    }\n  }\n  componentDidMount(){\n    const shortSurfaceId = this.props.surfaceid.split(\"/resource/\")[1]\n    const url = \"https://exist.scta.info/exist/apps/scta-app/folio-annotaiton-list-from-simpleXmlCoordinates.xq?surfaceid=\" + shortSurfaceId\n    // const url = \"http://localhost:8080/exist/apps/scta-app/folio-annotaiton-list-from-simpleXmlCoordinates.xq?surfaceid=\" + shortSurfaceId\n    Axios.get(url)\n      .then(({ data })=> {\n        this.setState({\n          data: data.resources,\n        });\n      })\n      .catch((err)=> {\n        console.log(err)\n      })\n  }\n\n  render() {\n    const getImageTextWrappers = () => {\n      const wrappers = this.state.data.map((h, i) => {\n          const text = h.resource.chars;\n          const canvas = h.on.split(\"#xywh=\")[0];\n          const canvasShort = canvas.split(\"/\")[canvas.split(\"/\").length - 1];\n          const coords = h.on.split(\"#xywh=\")[1];\n          const imageUrl = h.imageUrl\n          const label = h.label\n          return (\n            <ImageTextWrapper key={i}\n              imageUrl={imageUrl}\n              canvas={canvas}\n              coords={coords}\n              canvasShort={canvasShort}\n              text={text}\n              label={label}\n              targetLabel={this.props.targetLabel}\n              surfaceButton={false}\n              displayWidth=\"500\"\n              />\n          )\n          });\n          return wrappers\n    }\n    return (\n      <div className=\"surface\">\n            <p>{this.props.surfaceid}</p>\n\n            {getImageTextWrappers()}\n\n      </div>\n    );\n  }\n}\n\nexport default Surface;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'typeface-roboto'\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {packageData} from './Utils.js'\n\n\nimport Axios from 'axios';\n\nimport ImageTextWrapper from './ImageTextWrapper';\nimport Surface from './Surface';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this)\n    this.handleChangeCodex = this.handleChangeCodex.bind(this)\n    this.handleChangeInstitution = this.handleChangeInstitution.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleNext = this.handleNext.bind(this)\n    this.handlePrevious = this.handlePrevious.bind(this)\n    this.handleFirst = this.handleFirst.bind(this)\n    this.handleLast = this.handleLast.bind(this)\n    this.triggerSearch = this.triggerSearch.bind(this)\n    this.handleShowSurface = this.handleShowSurface.bind(this)\n    this.state = {\n      searchText: \"\",\n      searchCodex: \"\",\n      searchInstitution: \"\",\n      data: [],\n      surfaceid: \"\",\n      targetLabel: \"\",\n      itemsPerPage: 5,\n      institutions: []\n\n    }\n  }\n  handleChange(event) {\n\n    const inputText = event.target.value\n    this.setState({searchText: inputText});\n  };\n  handleChangeCodex(event) {\n    const searchCodex = event.target.value\n    this.setState({searchCodex: searchCodex});\n  };\n  handleChangeInstitution(event) {\n    const searchInstitution = event.target.value\n    this.setState({searchInstitution: searchInstitution});\n  };\n  triggerSearch(url){\n    Axios.get(url)\n      .then(({ data })=> {\n        let newData = []\n        if (data.constructor === Array){\n          newData = data.map((d) => {\n            return packageData(d, this.state.itemsPerPage)\n            });\n          }\n        else{\n          newData = [packageData(data, this.state.itemsPerPage)]\n        }\n        this.setState({\n          data: newData\n        });\n        })\n      .catch((err)=> {\n        console.log(err)\n      });\n  }\n\n  updateSearch(url, codex){\n    Axios.get(url)\n      .then(({ data })=> {\n        const newData = packageData(data, this.state.itemsPerPage)\n\n          this.setState((prevState) => {\n            const newDataArray = prevState.data.map((d) => {\n              if (d.codex === codex){\n                return newData\n              }\n              else {\n                return d\n              }\n            })\n            return{\n              data: newDataArray\n            }\n          });\n        })\n        .catch((err)=> {\n          console.log(err)\n        });\n      }\n\n  handleSubmit(e){\n    e.preventDefault()\n    let parameters = \"?page=1&q=\" + this.state.searchText\n    if (this.state.searchInstitution){ parameters = parameters + \"&institution=\" + this.state.searchInstitution}\n    if (this.state.searchCodex) { parameters = parameters + \"&codex=\" + this.state.searchCodex}\n    // const searchUrl = \"http://localhost:8080/exist/apps/scta-app/iiifsearch-with-paging-line-level-from-simpleXmlCoordinates2.xq\"\n    const searchUrl = \"https://exist.scta.info/exist/apps/scta-app/iiifsearch-with-paging-line-level-from-simpleXmlCoordinates2.xq\"\n    this.triggerSearch(searchUrl + parameters);\n    // if (this.state.searchCodex)\n    //   {this.triggerSearch(\"http://localhost:8080/exist/apps/scta-app/iiifsearch-with-paging-line-level-from-simpleXmlCoordinates.xq?page=1&q=\" + this.state.searchText + \"&codex=\" + this.state.searchCodex);\n    // }\n    // else{\n    //   this.triggerSearch(\"http://localhost:8080/exist/apps/scta-app/iiifsearch-with-paging-line-level-from-simpleXmlCoordinates2.xq?page=1&q=\" + this.state.searchText + \"&codex=\" + this.state.searchCodex);\n    // }\n  }\n  handleNext(codex){\n    const target = this.state.data.find((c) => c.codex === codex)\n    this.updateSearch(target.next, codex);\n  }\n  handlePrevious(codex){\n    // this.triggerSearch(this.state.prev + \"&codex=\" + this.state.searchCodex);\n    const target = this.state.data.find((c) => c.codex === codex)\n    this.updateSearch(target.prev, codex);\n  }\n  handleFirst(codex){\n    //this.triggerSearch(this.state.first + \"&codex=\" + this.state.searchCodex);\n    const target = this.state.data.find((c) => c.codex === codex)\n    this.updateSearch(target.first, codex);\n  }\n  handleLast(codex){\n    //this.triggerSearch(this.state.last + \"&codex=\" + this.state.searchCodex);\n    const target = this.state.data.find((c) => c.codex === codex)\n    this.updateSearch(target.last, codex);\n  }\n  handleShowSurface(surfaceid, label){\n    this.setState({surfaceid: surfaceid, targetLabel: label});\n  }\n  componentWillMount(){\n    const _this = this;\n    const sparqlEndpoint = \"https://sparql-docker.scta.info/ds/query\"\n    const query = [\n        \"SELECT DISTINCT ?institution ?institutionTitle  \",\n        \"WHERE { \",\n        \"?institution a <http://scta.info/resource/institution> .\",\n        \"?institution <http://purl.org/dc/elements/1.1/title> ?institutionTitle .\",\n        \"}\",\n        \"ORDER BY ?institutionTitle\"\n      ].join('');\n\n      Axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}})\n        .then(function(res){\n          const institutions = res.data.results.bindings.map((i) => {\n            return {\n              institutionShortId: i.institution.value.split(\"/resource/\")[1],\n              institutionTitle: i.institutionTitle.value\n            }\n          });\n          _this.setState({institutions: institutions})\n        })\n        .catch((err)=> {\n          console.log(err)\n        });\n\n        const codexQuery = [\n            \"SELECT DISTINCT ?codex ?codexTitle  \",\n            \"WHERE { \",\n            \"?codex a <http://scta.info/resource/codex> .\",\n            \"?codex <http://purl.org/dc/elements/1.1/title> ?codexTitle .\",\n            \"}\",\n            \"ORDER BY ?codexTitle\"\n          ].join('');\n\n          Axios.get(sparqlEndpoint, {params: {\"query\" : codexQuery, \"output\": \"json\"}})\n            .then(function(res){\n              const codices = res.data.results.bindings.map((c) => {\n                return {\n                  codexShortId: c.codex.value.split(\"/resource/\")[1],\n                  codexTitle: c.codexTitle.value\n                }\n              });\n              _this.setState({codices: codices})\n            })\n            .catch((err)=> {\n              console.log(err)\n            });\n\n  }\n  render() {\n    const getImageTextWrappers = () => {\n      const codexWrapper = this.state.data.map((codex, i) => {\n        const wrappers = codex.data.map((h, i) => {\n          const text = h.resource.chars;\n          const canvas = h.on.split(\"#xywh=\")[0];\n          const canvasShort = canvas.split(\"/\")[canvas.split(\"/\").length - 1];\n          const coords = h.on.split(\"#xywh=\")[1];\n          const imageUrl = h.imageUrl\n          const label = h.label\n          const surfaceid = h.surfaceId\n          return (\n            <ImageTextWrapper key={i}\n              imageUrl={imageUrl}\n              canvas={canvas}\n              coords={coords}\n              canvasShort={canvasShort}\n              text={text}\n              label={label}\n              surfaceid={surfaceid}\n              handleShowSurface={this.handleShowSurface}\n              surfaceButton={true}\n              displayWidth=\"800\"\n              />\n          )\n        });\n        return(\n            <div key={codex.codex}>\n\n              {\n                <div className=\"paggerWrapper\">\n                <p>{codex.total} total results for codex {codex.label}</p>\n                {codex.page > 2 && <Button onClick={() => {this.handleFirst(codex.codex)}}><Icon color=\"secondary\">first_page</Icon></Button>}\n                {codex.page > 1 && <Button onClick={() => {this.handlePrevious(codex.codex)}}><Icon color=\"secondary\">navigate_before</Icon></Button>}\n                <span>{!!codex.page && codex.page}</span>\n                {codex.page < (codex.totalPages) && <Button onClick={() => {this.handleNext(codex.codex)}} aria-label=\"Next\"><Icon color=\"secondary\">navigate_next</Icon></Button>}\n                {codex.page < (codex.totalPages - 1) && <Button onClick={() => {this.handleLast(codex.codex)}}><Icon color=\"secondary\">last_page</Icon></Button>}\n              </div>\n              }\n              <div>\n              {wrappers}\n              </div>\n            </div>\n          )\n        });\n        return codexWrapper\n\n    }\n    const getInstitutionMenuItems = () => {\n      //temp include list to exclude scta codices without corresponding coords data.\n      const includeList = [\"I-i9ujd3\", \"I-pdn3as\"]\n      if (this.state.institutions){\n        const institutions = this.state.institutions.map((i) => {\n          if (includeList.includes(i.institutionShortId)){\n            return <MenuItem key={i.codexShortId} value={i.institutionShortId}>{i.institutionTitle}</MenuItem>\n          }\n        })\n        return institutions\n      }\n\n    }\n    const getCodexMenuItems = () => {\n      //temp include list to exclude scta codices without corresponding coords data.\n      const includeList = [\"penn\", \"svict\", \"lon\", \"reims\", \"cod-yu78uh\", \"cod-xowk10\", \"penn855\"]\n      if (this.state.codices){\n        const codices = this.state.codices.map((c) => {\n          if (includeList.includes(c.codexShortId)){\n            return <MenuItem key={c.codexShortId} value={c.codexShortId}>{c.codexTitle}</MenuItem>\n          }\n        })\n        return codices\n      }\n\n    }\n    return (\n      <div className=\"App\">\n        <AppBar position=\"fixed\" color=\"primary\">\n\n          <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Paleographinator\n          </Typography>\n\n          <form onSubmit={this.handleSubmit} id=\"input-form\">\n\n              <InputLabel htmlFor=\"queryString\">Search Term</InputLabel>\n\n              <TextField id=\"queryString\"  onChange={this.handleChange} value={this.state.searchText} placeholder=\"search for word here\"></TextField>\n\n              <InputLabel htmlFor=\"codices\">Codices</InputLabel>\n                <Select\n                  value={this.state.searchCodex}\n                  onChange={this.handleChangeCodex}\n                  placeholder=\"restrict to codex\"\n                  inputProps={{\n                    codex: 'codex',\n                    id: 'codex',\n                  }}\n                  >\n                <MenuItem key=\"blankCodex\" value=\"\">Select</MenuItem>\n                {getCodexMenuItems()}\n\n\n                </Select>\n\n            <InputLabel htmlFor=\"institutions\">Institutions</InputLabel>\n              <Select\n                value={this.state.searchInstitution}\n                onChange={this.handleChangeInstitution}\n                inputProps={{\n                  institution: 'institution',\n                  id: 'institution',\n                }}\n                >\n                <MenuItem key=\"blankInstitutions\" value=\"\">Select</MenuItem>\n              {getInstitutionMenuItems()}\n\n              </Select>\n\n\n\n            <Button onClick={this.handleSubmit} type=\"submit\"><Icon color=\"secondary\">send</Icon></Button>\n          </form>\n          </Toolbar>\n        </AppBar>\n\n        <div className=\"wrapper\">\n          <div className=\"searchResults\">\n\n            {getImageTextWrappers()}\n          </div>\n          <div className=\"surfaceResults\">\n            {this.state.surfaceid && <Surface key={this.state.surfaceid} surfaceid={this.state.surfaceid} targetLabel={this.state.targetLabel}/>}\n          </div>\n        </div>\n        <AppBar position=\"sticky\" color=\"primary\">\n        <Toolbar id=\"footer-toolbar\">\n          <Link href=\"http://lombardpress.org\" block={false} color=\"secondary\">\n            A LombardPress Publication\n          </Link>\n          <Link href=\"https://scta.info\" block={false} color=\"secondary\">\n            Powered by SCTA Data\n          </Link>\n          <Link href=\"https://jeffreycwitt.com\" block={false} color=\"secondary\">\n            Designed by Jeffrey C. Witt\n          </Link>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}