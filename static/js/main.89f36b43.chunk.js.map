{"version":3,"sources":["logo.svg","Utils.js","Image.js","Text.js","Label.js","ImageTextWrapper.js","Surface.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","packageData","data","itemsPerPage","codex","split","label","resources","constructor","Array","next","prev","total","within","first","last","index","startIndex","page","Math","ceil","totalPages","Image","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchText","imageLink","imageUrl","coords","displayWidth","react_default","a","createElement","src","Component","Text","className","dangerouslySetInnerHTML","__html","text","_this2","surfaceButton","Button_default","onClick","handleShowSurface","surfaceid","Icon_default","ImageTextWrapper","defineProperty","targetLabel","getClass","Label","src_Image","canvas","canvasShort","src_Text","Surface","url","Axios","get","then","_ref","setState","catch","err","console","log","_this3","map","h","i","resource","chars","on","length","src_ImageTextWrapper","key","About","id","href","class","width","height","frameborder","allow","allowfullscreen","App","handleChange","bind","assertThisInitialized","handleChangeCodex","handleChangeInstitution","handleSubmit","handleNext","handlePrevious","handleFirst","handleLast","triggerSearch","searchCodex","searchInstitution","institutions","aboutView","event","inputText","target","value","newData","d","_ref2","prevState","e","preventDefault","parameters","find","c","updateSearch","query","join","params","output","res","results","bindings","institutionShortId","institution","institutionTitle","codexQuery","codices","codexShortId","codexTitle","_this4","AppBar_default","position","color","Toolbar_default","Typography_default","variant","onSubmit","InputLabel_default","htmlFor","TextField_default","onChange","placeholder","Select_default","inputProps","MenuItem_default","includeList","includes","getCodexMenuItems","getInstitutionMenuItems","type","handleToggleAbout","src_About","wrappers","surfaceId","aria-label","src_Surface","Link_default","block","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89f36b43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function packageData(data, itemsPerPage){\n  return {\n      codex: data[\"@id\"].split(\"codex=\")[1], // only works if codex is last paramater\n      label: data[\"label\"],\n      data: data.resources.constructor === Array ? data.resources : [data.resources],\n      next: data.next,\n      prev: data.prev,\n      total: data.within.total,\n      first: data.within.first,\n      last: data.within.last,\n      index: data.startIndex,\n      page: Math.ceil(data.startIndex / itemsPerPage) + 1,\n      totalPages: Math.ceil(data.within.total / itemsPerPage),\n      }\n}\n","import React, { Component } from 'react';\nclass Image extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    const imageLink = this.props.imageUrl + \"/\" + this.props.coords + \"/\" + this.props.displayWidth + \",/0/default.jpg\"\n    return (\n      <img src={imageLink}/>\n    );\n  }\n}\n\nexport default Image;\n","import React, { Component } from 'react';\n\nclass Text extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    return (\n      <div className=\"text\">\n       <span dangerouslySetInnerHTML={{__html: this.props.text}} />\n      </div>\n    );\n  }\n}\n\nexport default Text;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nclass Image extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    return (\n      <p className=\"label\">\n      {this.props.label}\n      {this.props.surfaceButton && <Button onClick={() => {this.props.handleShowSurface(this.props.surfaceid, this.props.label)}}><Icon>pageview</Icon></Button>}\n      </p>\n    );\n  }\n}\n\nexport default Image;\n","import React, { Component } from 'react';\nimport Image from './Image';\nimport Text from './Text';\nimport Label from './Label';\n\nclass ImageTextWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    const getClass = () => {\n      if (this.props.targetLabel === this.props.label){\n        return \"target\"\n      }\n    }\n    return (\n      <div className=\"ImageTextWrapper\" className={getClass()}>\n        <div className=\"labelImageWrapper\">\n        <Label label={this.props.label} handleShowSurface={this.props.handleShowSurface} surfaceid={this.props.surfaceid} surfaceButton={this.props.surfaceButton}/>\n        <Image\n          imageUrl={this.props.imageUrl}\n          canvas={this.props.canvas}\n          coords={this.props.coords}\n          canvasShort={this.props.canvasShort}\n          displayWidth={this.props.displayWidth}\n          />\n        </div>\n        <Text text={this.props.text}/>\n      </div>\n    );\n  }\n}\n\nexport default ImageTextWrapper;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nimport ImageTextWrapper from './ImageTextWrapper';\n\nclass Surface extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    }\n  }\n  componentDidMount(){\n    const shortSurfaceId = this.props.surfaceid.split(\"/resource/\")[1]\n    const url = \"https://exist.scta.info/exist/apps/scta-app/folio-annotaiton-list-from-simpleXmlCoordinates.xq?surfaceid=\" + shortSurfaceId\n    // const url = \"http://localhost:8080/exist/apps/scta-app/folio-annotaiton-list-from-simpleXmlCoordinates.xq?surfaceid=\" + shortSurfaceId\n    Axios.get(url)\n      .then(({ data })=> {\n        this.setState({\n          data: data.resources,\n        });\n      })\n      .catch((err)=> {\n        console.log(err)\n      })\n  }\n\n  render() {\n    const getImageTextWrappers = () => {\n      const wrappers = this.state.data.map((h, i) => {\n          const text = h.resource.chars;\n          const canvas = h.on.split(\"#xywh=\")[0];\n          const canvasShort = canvas.split(\"/\")[canvas.split(\"/\").length - 1];\n          const coords = h.on.split(\"#xywh=\")[1];\n          const imageUrl = h.imageUrl\n          const label = h.label\n          return (\n            <ImageTextWrapper key={i}\n              imageUrl={imageUrl}\n              canvas={canvas}\n              coords={coords}\n              canvasShort={canvasShort}\n              text={text}\n              label={label}\n              targetLabel={this.props.targetLabel}\n              surfaceButton={false}\n              displayWidth=\"500\"\n              />\n          )\n          });\n          return wrappers\n    }\n    return (\n      <div className=\"surface\">\n            <p>{this.props.surfaceid}</p>\n\n            {getImageTextWrappers()}\n\n      </div>\n    );\n  }\n}\n\nexport default Surface;\n","import React, { Component } from 'react';\nclass About extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div id=\"about\">\n\n        <p>\n        Thanks for checking out the <em>Paleographinator</em>.\n        The Paleographinator is designed to take advantage\n        of the ongoing global work\n        to transcribe medieval manuscripts and create\n        editions of medieval texts. </p>\n\n        <p>While this data is often being created primarily\n        to appear as a document on a printed page or web page,\n        when this data is thoughtfully created first as semantically encoded data,\n        it can be aggregated by\n        <a href=\"https://scta.info/resource\">Scholastic Commentaries and Texts Achive</a>,\n        and made available for re-use.</p>\n\n        <p>This particular application recombines data organized by the SCTA,\n         and presents it in a way that makes it easy to compare\n         text abbreviations against other instances.</p>\n\n         <p>Watch a brief demo here:</p>\n         <iframe class=\"youtube\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gdfncaR0eu4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n         <p>The app and the data coming from the SCTA are still very much under development,\n         so, while it is already useful, you will find\n         mismatching images and text.\n         However, as work on text editions continues,\n         so will the quality of the search results.\n         </p>\n\n         <p>If you want to report an issue or feature request, please do so here\n         <a href=\"https://github.com/lombardpress/paleographinator/issues\">https://github.com/lombardpress/paleographinator/issues</a>\n         </p>\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'typeface-roboto'\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {packageData} from './Utils.js'\n\n\nimport Axios from 'axios';\n\nimport ImageTextWrapper from './ImageTextWrapper';\nimport Surface from './Surface';\nimport About from './About';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this)\n    this.handleChangeCodex = this.handleChangeCodex.bind(this)\n    this.handleChangeInstitution = this.handleChangeInstitution.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleNext = this.handleNext.bind(this)\n    this.handlePrevious = this.handlePrevious.bind(this)\n    this.handleFirst = this.handleFirst.bind(this)\n    this.handleLast = this.handleLast.bind(this)\n    this.triggerSearch = this.triggerSearch.bind(this)\n    this.handleShowSurface = this.handleShowSurface.bind(this)\n    this.state = {\n      searchText: \"\",\n      searchCodex: \"\",\n      searchInstitution: \"\",\n      data: [],\n      surfaceid: \"\",\n      targetLabel: \"\",\n      itemsPerPage: 5,\n      institutions: [],\n      aboutView: false\n\n    }\n  }\n  handleChange(event) {\n\n    const inputText = event.target.value\n    this.setState({searchText: inputText});\n  };\n  handleChangeCodex(event) {\n    const searchCodex = event.target.value\n    this.setState({searchCodex: searchCodex});\n  };\n  handleChangeInstitution(event) {\n    const searchInstitution = event.target.value\n    this.setState({searchInstitution: searchInstitution});\n  };\n  triggerSearch(url){\n    Axios.get(url)\n      .then(({ data })=> {\n        let newData = []\n        if (data.constructor === Array){\n          newData = data.map((d) => {\n            return packageData(d, this.state.itemsPerPage)\n            });\n          }\n        else{\n          newData = [packageData(data, this.state.itemsPerPage)]\n        }\n        this.setState({\n          data: newData\n        });\n        })\n      .catch((err)=> {\n        console.log(err)\n      });\n  }\n\n  updateSearch(url, codex){\n    Axios.get(url)\n      .then(({ data })=> {\n        const newData = packageData(data, this.state.itemsPerPage)\n\n          this.setState((prevState) => {\n            const newDataArray = prevState.data.map((d) => {\n              if (d.codex === codex){\n                return newData\n              }\n              else {\n                return d\n              }\n            })\n            return{\n              data: newDataArray\n            }\n          });\n        })\n        .catch((err)=> {\n          console.log(err)\n        });\n      }\n\n  handleSubmit(e){\n    e.preventDefault()\n    let parameters = \"?page=1&q=\" + this.state.searchText\n    if (this.state.searchInstitution){ parameters = parameters + \"&institution=\" + this.state.searchInstitution}\n    if (this.state.searchCodex) { parameters = parameters + \"&codex=\" + this.state.searchCodex}\n    // const searchUrl = \"http://localhost:8080/exist/apps/scta-app/iiifsearch-with-paging-line-level-from-simpleXmlCoordinates2.xq\"\n    const searchUrl = \"https://exist.scta.info/exist/apps/scta-app/iiifsearch-with-paging-line-level-from-simpleXmlCoordinates2.xq\"\n    this.triggerSearch(searchUrl + parameters);\n    // if (this.state.searchCodex)\n    //   {this.triggerSearch(\"http://localhost:8080/exist/apps/scta-app/iiifsearch-with-paging-line-level-from-simpleXmlCoordinates.xq?page=1&q=\" + this.state.searchText + \"&codex=\" + this.state.searchCodex);\n    // }\n    // else{\n    //   this.triggerSearch(\"http://localhost:8080/exist/apps/scta-app/iiifsearch-with-paging-line-level-from-simpleXmlCoordinates2.xq?page=1&q=\" + this.state.searchText + \"&codex=\" + this.state.searchCodex);\n    // }\n  }\n  handleNext(codex){\n    const target = this.state.data.find((c) => c.codex === codex)\n    this.updateSearch(target.next, codex);\n  }\n  handlePrevious(codex){\n    // this.triggerSearch(this.state.prev + \"&codex=\" + this.state.searchCodex);\n    const target = this.state.data.find((c) => c.codex === codex)\n    this.updateSearch(target.prev, codex);\n  }\n  handleFirst(codex){\n    //this.triggerSearch(this.state.first + \"&codex=\" + this.state.searchCodex);\n    const target = this.state.data.find((c) => c.codex === codex)\n    this.updateSearch(target.first, codex);\n  }\n  handleLast(codex){\n    //this.triggerSearch(this.state.last + \"&codex=\" + this.state.searchCodex);\n    const target = this.state.data.find((c) => c.codex === codex)\n    this.updateSearch(target.last, codex);\n  }\n  handleShowSurface(surfaceid, label){\n    this.setState({surfaceid: surfaceid, targetLabel: label});\n  }\n  componentWillMount(){\n    const _this = this;\n    const sparqlEndpoint = \"https://sparql-docker.scta.info/ds/query\"\n    const query = [\n        \"SELECT DISTINCT ?institution ?institutionTitle  \",\n        \"WHERE { \",\n        \"?institution a <http://scta.info/resource/institution> .\",\n        \"?institution <http://purl.org/dc/elements/1.1/title> ?institutionTitle .\",\n        \"}\",\n        \"ORDER BY ?institutionTitle\"\n      ].join('');\n\n      Axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}})\n        .then(function(res){\n          const institutions = res.data.results.bindings.map((i) => {\n            return {\n              institutionShortId: i.institution.value.split(\"/resource/\")[1],\n              institutionTitle: i.institutionTitle.value\n            }\n          });\n          _this.setState({institutions: institutions})\n        })\n        .catch((err)=> {\n          console.log(err)\n        });\n\n        const codexQuery = [\n            \"SELECT DISTINCT ?codex ?codexTitle  \",\n            \"WHERE { \",\n            \"?codex a <http://scta.info/resource/codex> .\",\n            \"?codex <http://purl.org/dc/elements/1.1/title> ?codexTitle .\",\n            \"}\",\n            \"ORDER BY ?codexTitle\"\n          ].join('');\n\n          Axios.get(sparqlEndpoint, {params: {\"query\" : codexQuery, \"output\": \"json\"}})\n            .then(function(res){\n              const codices = res.data.results.bindings.map((c) => {\n                return {\n                  codexShortId: c.codex.value.split(\"/resource/\")[1],\n                  codexTitle: c.codexTitle.value\n                }\n              });\n              _this.setState({codices: codices})\n            })\n            .catch((err)=> {\n              console.log(err)\n            });\n\n  }\n  handleToggleAbout(){\n    this.setState((prevState) => {\n      return {\n        aboutView: !prevState.aboutView\n      }\n    })\n  }\n  render() {\n    const getImageTextWrappers = () => {\n      const codexWrapper = this.state.data.map((codex, i) => {\n        const wrappers = codex.data.map((h, i) => {\n          const text = h.resource.chars;\n          const canvas = h.on.split(\"#xywh=\")[0];\n          const canvasShort = canvas.split(\"/\")[canvas.split(\"/\").length - 1];\n          const coords = h.on.split(\"#xywh=\")[1];\n          const imageUrl = h.imageUrl\n          const label = h.label\n          const surfaceid = h.surfaceId\n          return (\n            <ImageTextWrapper key={i}\n              imageUrl={imageUrl}\n              canvas={canvas}\n              coords={coords}\n              canvasShort={canvasShort}\n              text={text}\n              label={label}\n              surfaceid={surfaceid}\n              handleShowSurface={this.handleShowSurface}\n              surfaceButton={true}\n              displayWidth=\"800\"\n              />\n          )\n        });\n        return(\n            <div key={codex.codex}>\n\n              {\n                <div className=\"paggerWrapper\">\n                <p>{codex.total} total results for codex {codex.label}</p>\n                {codex.page > 2 && <Button onClick={() => {this.handleFirst(codex.codex)}}><Icon color=\"secondary\">first_page</Icon></Button>}\n                {codex.page > 1 && <Button onClick={() => {this.handlePrevious(codex.codex)}}><Icon color=\"secondary\">navigate_before</Icon></Button>}\n                <span>{!!codex.page && codex.page}</span>\n                {codex.page < (codex.totalPages) && <Button onClick={() => {this.handleNext(codex.codex)}} aria-label=\"Next\"><Icon color=\"secondary\">navigate_next</Icon></Button>}\n                {codex.page < (codex.totalPages - 1) && <Button onClick={() => {this.handleLast(codex.codex)}}><Icon color=\"secondary\">last_page</Icon></Button>}\n              </div>\n              }\n              <div>\n              {wrappers}\n              </div>\n            </div>\n          )\n        });\n        return codexWrapper\n\n    }\n    const getInstitutionMenuItems = () => {\n      //temp include list to exclude scta codices without corresponding coords data.\n      const includeList = [\"I-i9ujd3\", \"I-pdn3as\"]\n      if (this.state.institutions){\n        const institutions = this.state.institutions.map((i) => {\n          if (includeList.includes(i.institutionShortId)){\n            return <MenuItem key={i.codexShortId} value={i.institutionShortId}>{i.institutionTitle}</MenuItem>\n          }\n        })\n        return institutions\n      }\n\n    }\n    const getCodexMenuItems = () => {\n      //temp include list to exclude scta codices without corresponding coords data.\n      const includeList = [\"penn\", \"svict\", \"lon\", \"reims\", \"cod-yu78uh\", \"cod-xowk10\", \"penn855\", \"Lyon1518\"]\n      if (this.state.codices){\n        const codices = this.state.codices.map((c) => {\n          if (includeList.includes(c.codexShortId)){\n            return <MenuItem key={c.codexShortId} value={c.codexShortId}>{c.codexTitle}</MenuItem>\n          }\n        })\n        return codices\n      }\n\n    }\n    return (\n      <div className=\"App\">\n        <AppBar position=\"fixed\" color=\"primary\">\n\n          <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Paleographinator\n          </Typography>\n\n          <form onSubmit={this.handleSubmit} id=\"input-form\">\n\n              <InputLabel htmlFor=\"queryString\">Search Term</InputLabel>\n\n              <TextField id=\"queryString\"  onChange={this.handleChange} value={this.state.searchText} placeholder=\"search for word here\"></TextField>\n\n              <InputLabel htmlFor=\"codices\">Codices</InputLabel>\n                <Select\n                  value={this.state.searchCodex}\n                  onChange={this.handleChangeCodex}\n                  placeholder=\"restrict to codex\"\n                  inputProps={{\n                    codex: 'codex',\n                    id: 'codex',\n                  }}\n                  >\n                <MenuItem key=\"blankCodex\" value=\"\">Select</MenuItem>\n                {getCodexMenuItems()}\n\n\n                </Select>\n\n            <InputLabel htmlFor=\"institutions\">Institutions</InputLabel>\n              <Select\n                value={this.state.searchInstitution}\n                onChange={this.handleChangeInstitution}\n                inputProps={{\n                  institution: 'institution',\n                  id: 'institution',\n                }}\n                >\n                <MenuItem key=\"blankInstitutions\" value=\"\">Select</MenuItem>\n              {getInstitutionMenuItems()}\n\n              </Select>\n\n\n\n            <Button onClick={this.handleSubmit} type=\"submit\"><Icon color=\"secondary\">send</Icon></Button>\n          </form>\n          <Button onClick={() => {this.handleToggleAbout()}}>{this.state.aboutView ? <span>Hide About</span> : <span>About</span>}</Button>\n          </Toolbar>\n        </AppBar>\n        { this.state.aboutView ? <About/> :\n\n        <div className=\"wrapper\">\n          <div className=\"searchResults\">\n\n            {getImageTextWrappers()}\n          </div>\n          <div className=\"surfaceResults\">\n            {this.state.surfaceid && <Surface key={this.state.surfaceid} surfaceid={this.state.surfaceid} targetLabel={this.state.targetLabel}/>}\n          </div>\n        </div>\n      }\n        <AppBar position=\"sticky\" color=\"primary\">\n        <Toolbar id=\"footer-toolbar\">\n          <Link href=\"http://lombardpress.org\" block={false} color=\"secondary\">\n            A LombardPress Publication\n          </Link>\n          <Link href=\"https://scta.info\" block={false} color=\"secondary\">\n            Powered by SCTA Data\n          </Link>\n          <Link href=\"https://jeffreycwitt.com\" block={false} color=\"secondary\">\n            Designed by Jeffrey C. Witt\n          </Link>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}